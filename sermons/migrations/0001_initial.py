# Generated by Django 5.2.4 on 2025-07-29 22:12

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('pages', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='SermonSeries',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('slug', models.SlugField(blank=True, unique=True)),
                ('description', models.TextField(blank=True)),
                ('image', models.ImageField(blank=True, help_text='Recommended size: 800x400 pixels', upload_to='sermon_series/')),
                ('start_date', models.DateField(blank=True, null=True)),
                ('end_date', models.DateField(blank=True, null=True)),
                ('is_featured', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Sermon Series',
                'verbose_name_plural': 'Sermon Series',
                'ordering': ['-start_date', 'title'],
            },
        ),
        migrations.CreateModel(
            name='Speaker',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('slug', models.SlugField(blank=True, unique=True)),
                ('bio', models.TextField(blank=True)),
                ('photo', models.ImageField(blank=True, help_text='Recommended size: 300x300 pixels', upload_to='speakers/')),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('website', models.URLField(blank=True, validators=[django.core.validators.URLValidator()])),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('leadership_profile', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='speaker_profile', to='pages.leadershipprofile')),
            ],
            options={
                'verbose_name': 'Speaker',
                'verbose_name_plural': 'Speakers',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Sermon',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('slug', models.SlugField(blank=True, unique=True)),
                ('description', models.TextField(blank=True)),
                ('date_preached', models.DateField()),
                ('duration', models.DurationField(blank=True, help_text='Duration in HH:MM:SS format', null=True)),
                ('media_type', models.CharField(choices=[('video', 'Video'), ('audio', 'Audio Only'), ('both', 'Both Video and Audio')], default='video', max_length=10)),
                ('video_url', models.URLField(blank=True, help_text='YouTube, Vimeo, or other video platform URL', validators=[django.core.validators.URLValidator()])),
                ('audio_file', models.FileField(blank=True, help_text='Upload MP3 or other audio file', upload_to='sermons/audio/')),
                ('transcript', models.TextField(blank=True, help_text='Full transcript of the sermon')),
                ('notes', models.TextField(blank=True, help_text='Sermon notes or outline')),
                ('scripture_references', models.TextField(blank=True, help_text='Bible verses referenced in the sermon')),
                ('tags', models.CharField(blank=True, help_text='Comma-separated tags', max_length=200)),
                ('thumbnail', models.ImageField(blank=True, help_text='Recommended size: 800x450 pixels', upload_to='sermons/thumbnails/')),
                ('pdf_notes', models.FileField(blank=True, help_text='PDF version of sermon notes', upload_to='sermons/pdf/')),
                ('view_count', models.PositiveIntegerField(default=0)),
                ('download_count', models.PositiveIntegerField(default=0)),
                ('is_published', models.BooleanField(default=True)),
                ('is_featured', models.BooleanField(default=False)),
                ('meta_description', models.TextField(blank=True, help_text='Meta description for SEO (max 160 characters)', max_length=160)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('series', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='sermons', to='sermons.sermonseries')),
                ('speaker', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sermons', to='sermons.speaker')),
            ],
            options={
                'verbose_name': 'Sermon',
                'verbose_name_plural': 'Sermons',
                'ordering': ['-date_preached', '-created_at'],
                'indexes': [models.Index(fields=['-date_preached'], name='sermons_ser_date_pr_31882c_idx'), models.Index(fields=['is_published'], name='sermons_ser_is_publ_4b381c_idx'), models.Index(fields=['speaker'], name='sermons_ser_speaker_825811_idx'), models.Index(fields=['series'], name='sermons_ser_series__442b6d_idx')],
            },
        ),
    ]
